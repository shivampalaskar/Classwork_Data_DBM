mysql -u dac -p

SHOW DATABASES;

USE hr;

SHOW TABLES;

DESCRIBE employees;

1)
SELECT FIRST_NAME,LAST_NAME
FROM employees
WHERE 
FIRST_NAME LIKE 'S%' AND
LAST_NAME LIKE 'S%';

2)
SELECT LCASE(FIRST_NAME)
FROM employees;

SELECT LEFT(FIRST_NAME,1)
FROM employees;

SELECT LCASE(LEFT(FIRST_NAME,1))
FROM employees;

SELECT SUBSTRING(FIRST_NAME,1,1)
FROM employees;

SELECT LENGTH(FIRST_NAME)
FROM employees;

SELECT 
CONCAT(UCASE(LEFT(FIRST_NAME,1)),LCASE(SUBSTRING(FIRST_NAME,2,LENGTH(FIRST_NAME)))) AS FIRTS_NAME,
CONCAT(UCASE(LEFT(LAST_NAME,1)),LCASE(SUBSTRING(LAST_NAME,2,LENGTH(LAST_NAME)))) AS FIRST_NAME
FROM employees;

3)
SELECT LEFT(JOB_TITLE,1)
FROM jobs;

4)

SELECT SUBSTRING(LAST_NAME,4,1) AS LAST_NAME
FROM employees;

SELECT FIRST_NAME,LAST_NAME,LENGTH(FIRST_NAME)
FROM employees
WHERE SUBSTRING(LAST_NAME,4,1)='b';

6)
SELECT FIRST_NAME,SALARY,ROUND(SALARY,-3) AS 'ROUND SALARY THOUSAND'
FROM employees;

7)
SELECT MANAGER_ID,EMPLOYEE_ID
FROM employees;

SELECT MANAGER_ID,COUNT(EMPLOYEE_ID) AS 'MANAGED EMPLOYEE'
FROM employees
GROUP BY MANAGER_ID;

8)


9)
SELECT COUNTRY_ID,CITY FROM locations;

SELECT COUNTRY_ID,COUNT(CITY) 
FROM locations
GROUP BY COUNTRY_ID;

9)
SELECT EMPLOYEE_ID,END_DATE 
FROM job_history;

10)
SELECT DEPARTMENT_ID,AVG(SALARY)
FROM employees
WHERE COMMISSION_PCT !=0
GROUP BY DEPARTMENT_ID;

11)
SELECT JOB_ID,COUNT(EMPLOYEE_ID),SUM(SALARY),MAX(SALARY),MIN(SALARY),
MAX(SALARY)-MIN(SALARY) AS DIFFERENCE
FROM employees
GROUP BY JOB_ID;

12)
SELECT JOB_ID,AVG(SALARY) 
FROM employees
GROUP BY JOB_ID
HAVING AVG(SALARY)>10000;

13)
SELECT YEAR(HIRE_DATE) FROM employees;

SELECT YEAR(HIRE_DATE) AS YEAR
FROM employees
GROUP BY YEAR
HAVING COUNT(EMPLOYEE_ID)>10;

14)
SELECT DEPARTMENT_ID
FROM employees
WHERE COMMISSION_PCT !=0
GROUP BY (DEPARTMENT_ID)
HAVING COUNT(EMPLOYEE_ID)>5;

15)
SELECT EMPLOYEE_ID
FROM job_history
GROUP BY EMPLOYEE_ID
HAVING COUNT(EMPLOYEE_ID)>1;

16)
SELECT JOB_ID
FROM job_history
WHERE END_DATE-START_DATE >100
GROUP BY JOB_ID
HAVING COUNT(EMPLOYEE_ID)>3;

17)
SELECT DEPARTMENT_ID,YEAR(HIRE_DATE) AS YEAR,COUNT(EMPLOYEE_ID)
FROM employees
GROUP BY DEPARTMENT_ID,YEAR;

18)
SELECT DEPARTMENT_ID,COUNT(EMPLOYEE_ID) 
FROM employees
GROUP BY DEPARTMENT_ID;

SELECT MANAGER_ID,COUNT(EMPLOYEE_ID) 
FROM employees
GROUP BY MANAGER_ID;

SELECT DEPARTMENT_ID,MANAGER_ID,COUNT(EMPLOYEE_ID) 'No. Employee Managed'
FROM employees
GROUP BY DEPARTMENT_ID,MANAGER_ID
HAVING COUNT(EMPLOYEE_ID)>5;

19)
SELECT FIRST_NAME,ADDDATE(HIRE_DATE,INTERVAL 30 DAY) AS 'FIRST SALARY DATE'
FROM employees;
--OR-- WE CAN USE DATE_ADD() FUNCTION INSTEAD OF ADDDATE

20)
SELECT EMPLOYEE_ID,HIRE_DATE,CURRENT_DATE,FROM_DAYS(DATEDIFF(CURRENT_DATE,HIRE_DATE)) AS 'EXPERIENCE IN DAYS' 
FROM employees;

21)
SELECT FIRST_NAME,HIRE_DATE
FROM employees
WHERE YEAR(HIRE_DATE)=2001;

22)
SELECT * FROM employees
WHERE YEAR(HIRE_DATE)=YEAR(CURRENT_DATE);

23)
SELECT DATEDIFF(CURRENT_DATE,'2011-01-01') 'DAYS FROM 2011-01-01' FROM DUAL;

24)
SELECT MONTH(HIRE_DATE) AS MONTH,COUNT(EMPLOYEE_ID) AS 'NUMBER OF EMPLOYEE0S JOINED'
FROM employees
GROUP BY MONTH(HIRE_DATE);

25)
SELECT DAY(CURRENT_DATE) FROM DUAL;

SELECT COUNT(EMPLOYEE_ID)
FROM employees
WHERE DAY(HIRE_DATE)>15;

26)
SELECT DEPARTMENT_ID,MAX(SALARY)
FROM employees
GROUP BY DEPARTMENT_ID
HAVING MAX(SALARY)>10000;


-- USE spj Database

1)
USE spj;

SELECT Pname FROM P 
WHERE pname LIKE 'S%';

2)
SELECT Sname,city FROM S
WHERE LEFT(city,1)='L';

3)
SELECT Jname FROM J
WHERE SUBSTRING(Jname,3,1)='n';

4)
SELECT Sname FROM S
WHERE ASCII(LEFT(Sname,1))=ASCII(UPPER(LEFT(Sname,1))); 

5)
SELECT UPPER(Sname) FROM S;






































