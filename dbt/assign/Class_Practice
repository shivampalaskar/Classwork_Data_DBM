mysql -u dac -p

USE classwork;


CROSS JOIN:

SELECT e.ename,d.dname
FROM EMP e CROSS JOIN DEPT d;
====OR=====
SELECT ename,dname
FROM EMP CROSS JOIN DEPT;
=====OR=====
SELECT ename,dname
FROM EMP,DEPT;

INNER JOIN:

SELECT e.ename,d.dname
FROM EMP e INNER JOIN DEPT d; -- THIS WORKS LIKE OUTER JOIN

SELECT e.ename,d.dname
FROM EMP e INNER JOIN DEPT d
ON e.deptno = d.deptno; 
=====OR=====
SELECT ename,dname
FROM EMP,DEPT
WHERE deptno = deptno; -- FOR THIS REASON WE NEED TABLE_NAME.COLUMN_NAME SCHEME
=====OR=====
SELECT ename,dname
FROM EMP,DEPT
WHERE EMP.deptno = DEPT.deptno;
=====OR=====
SELECT ename,dname
FROM EMP e,DEPT d
WHERE e.deptno = d.deptno; -- ALIAS FOR TABLE NAME

LEFT OUTER JOIN:

SELECT e.ename,d.dname 
FROM EMP e LEFT OUTER JOIN DEPT d
ON e.deptno=d.deptno;

SELECT e.ename,d.dname 
FROM DEPT d LEFT OUTER JOIN EMP e 
ON e.deptno=d.deptno;

FULL JOIN:

SELECT e.ename,d.dname
FROM EMP e LEFT OUTER JOIN DEPT d
ON e.deptno=d.deptno;

SELECT e.ename,d.dname 
FROM EMP e RIGHT OUTER JOIN DEPT d
ON e.deptno = d.deptno;


SELECT e.ename,d.dname
FROM EMP e LEFT OUTER JOIN DEPT d
ON e.deptno=d.deptno
UNION
SELECT e.ename,d.dname 
FROM EMP e RIGHT OUTER JOIN DEPT d
ON e.deptno = d.deptno;

SELECT e.ename,d.dname
FROM EMP e LEFT OUTER JOIN DEPT d
ON e.deptno=d.deptno
UNION ALL
SELECT e.ename,d.dname 
FROM EMP e RIGHT OUTER JOIN DEPT d
ON e.deptno = d.deptno;

SELF JOIN:

SELECT e1.ename,e2.ename
FROM EMP e1 INNER JOIN EMP e2
ON e1.mgr = e2.empno;

TABLE RELATIONS:

CREATE TABLE dept
(
	deptno INT,
	dname VARCHAR(50),
	CONSTRAINT PK_DEPT_DEPTNO
	PRIMARY KEY(deptno)
);
INSERT INTO dept
VALUES
( 10,'DEV'),
( 20,'QA'),
( 30,'ACCOUNT'),
( 40,'OPERATIONS');


SELECT em.id,em.meetno,em.empno,m.topic,m.venue,e.ename,e.deptno
FROM meeting m INNER JOIN emp_meeting em
ON m.meetno = em.meetno
INNER JOIN emp e
ON em.empno = e.empno;



SELECT em.id,em.meetno,em.empno,m.topic,m.venue,e.ename,e.deptno
FROM emp_meeting em INNER JOIN meeting m
ON m.meetno = em.meetno
INNER JOIN emp e
ON em.empno = e.empno;

********************************************************************************

CREATE TABLE no_primary_key_table
(	
	id INT,				-- NO PRIMARY KEY
	name VARCHAR(10)
);

CREATE TABLE foreign_key_table
(
	id INT,
	address VARCHAR(20),
	CONSTRAINT FK_ON_FKID_NOPKID FOREIGN KEY (id) REFERENCES no_primary_key_table(id)
);   -- Failed to add the foreign key constraint. Missing index for constraint 'FK_ON_FKID_NOPKID' in the referenced table 'no_primary_key_table'

================================================================================

CREATE TABLE no_primary_key_table
(	
	id INT PRIMARY KEY,				-- IT MUST BE ATTRIBUTED WITH PRIMARY KEY FOR TO REFEENCED BY OTHER TABLES FOREIGN KEY
	name VARCHAR(10)
);

CREATE TABLE foreign_key_table
(
	id INT,
	address VARCHAR(20),
	CONSTRAINT FK_ON_FKID_NOPKID FOREIGN KEY (id) REFERENCES no_primary_key_table(id)
);   -- OK
**********************************************************************************



Q.Print meeting topic and employee names and their addresses

SELECT m.topic,e.ename,a.loc
FROM meeting m INNER JOIN emp_meeting em
ON m.meetno = em.meetno
INNER JOIN emp e
ON em.empno = e.empno
INNER JOIN address a
ON e.empno = a.empno;

Q.Print meeting topic and enames and their depts

SELECT m.topic,em.empno,e.ename,d.dname
FROM meeting m INNER JOIN emp_meeting em
ON m.meetno = em.meetno
INNER JOIN emp e
ON e.empno = em.empno
INNER JOIN dept d
ON d.deptno = e.deptno;

SELECT d.DEPARTMENT_NAME,e.FIRST_NAME AS MANAGER_NAME,d.MANAGER_ID
FROM employees e INNER JOIN departments d
ON d.MANAGER_ID = e.EMPLOYEE_ID;

***********

SELECT MONTH(e.HIRE_DATE)
FROM locations l INNER JOIN departments d
ON l.LOCATION_ID = d.LOCATION_ID
INNER JOIN employees e
ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
WHERE l.CITY='Seattle'
GROUP BY MONTH(e.HIRE_DATE)
HAVING COUNT(EMPLOYEE_ID)>5;

************

+----+--------+--------+--------+
| S# | Sname  | Status | City   |
+----+--------+--------+--------+
| S1 | Smith  |     20 | London |
| S2 | Jones  |     10 | Paris  |
| S4 | Clark  |     20 | London |
| S5 | Adams  |     30 | Athens |
| S6 | prasad |     50 | nagpur |
+----+--------+--------+--------+

11 . Display all the Suppliers with the same Status as the
supplier , ‘ CLARK ’.

SELECT s1.Sname,s1.Status
FROM S s1 INNER JOIN S s2
ON s1.Sname = (SELECT Status FROM S WHERE Sname='Clark');

#Day7

CREATE TABLE empcpy 
AS (SELECT * FROM emp);  -- () ARE OPTIONAL

empcpy;
+-------+---------+--------+
| empno | ename   | deptno |
+-------+---------+--------+
|     1 | Rahul   |     10 |
|     2 | Amit    |     10 |
|     3 | Sandeep |     20 |
|     4 | Nilesh  |     50 |
|     5 | Nitin   |     50 |
|     1 | Shivam  |     20 |
+-------+---------+--------+

CREATE VIEW view1
AS SELECT * FROM empcpy;

INSERT INTO view1
VALUES(1,'Shivam',20);

view1;
+-------+---------+--------+
| empno | ename   | deptno |
+-------+---------+--------+
|     1 | Rahul   |     10 |
|     2 | Amit    |     10 |
|     3 | Sandeep |     20 |
|     4 | Nilesh  |     50 |
|     5 | Nitin   |     50 |
|     1 | Shivam  |     20 |
+-------+---------+--------+
6 rows in set (0.00 sec)


SHOW FULL TABLES;


CREATE VIEW view2
AS SELECT empno,ename,sal,deptno FROM EMP;

view2;
+-------+--------+---------+--------+
| empno | ename  | sal     | deptno |
+-------+--------+---------+--------+
|  7369 | SMITH  |  800.00 |     20 |
|  7499 | ALLEN  | 1600.00 |     30 |
|  7521 | WARD   | 1250.00 |     30 |
|  7566 | JONES  | 2975.00 |     20 |
|  7654 | MARTIN | 1250.00 |     30 |
|  7698 | BLAKE  | 2850.00 |     30 |
|  7782 | CLARK  | 2450.00 |     10 |
|  7788 | SCOTT  | 3000.00 |     20 |
|  7839 | KING   | 5000.00 |     10 |
|  7844 | TURNER | 1500.00 |     30 |
|  7876 | ADAMS  | 1100.00 |     20 |
|  7900 | JAMES  |  950.00 |     30 |
|  7902 | FORD   | 3000.00 |     20 |
|  7934 | MILLER | 1300.00 |     10 |
+-------+--------+---------+--------+
	
INSERT INTO view2
VALUES(7935,'SHIVAM',1500,30);

SELECT * FROM view2;
SELECT * FROM EMP;

CREATE VIEW Compounded_View
AS (SELECT empno,ename,deptno,sal,sal*12 AS ANNUAL_SALARY FROM EMP); 

INSERT INTO Compounded_View
VALUES(7936,'AMIT',6000,10);

CREATE VIEW Where_View
AS 
(SELECT empno,ename,deptno,sal FROM EMP 
WHERE sal > 2000);

SELECT * FROM Where_View;

INSERT INTO Where_View
VALUES(7937,'SANDEEP',1200,10);

INSERT INTO Where_View
VALUES(7938,'KETAN',2200,10);

SELECT * FROM Where_View;

DELETE FROM EMP 
WHERE empno=7935;

CREATE TABLE EMP_CPY
AS SELECT * FROM EMP;

CREATE VIEW Groupby_view
AS 
(SELECT SUM(price),subject 
FROM BOOKS
GROUP BY subject);




























